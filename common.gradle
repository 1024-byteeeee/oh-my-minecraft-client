apply(plugin: "maven-publish")
apply(plugin: "fabric-loom")
apply(plugin: "io.github.juuxel.loom-quiltflower")
apply(plugin: "com.replaymod.preprocess")

int mcVersion = 1

preprocess {
    mcVersion = vars.get()["MC"]
    tabIndentation = false
}

repositories {
    maven {
        name("CurseForge Maven")
        url("https://www.cursemaven.com")
    }
    maven{
        name("Modrinth Maven")
        url("https://api.modrinth.com/maven")
    }
    maven {
        name("Nyan Maven")
        url("https://maven.hendrixshen.top")
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings(loom.officialMojangMappings())

    // Annotation processor
    modApi("org.projectlombok:lombok:${project.lombok_version}")
    annotationProcessor("org.projectlombok:lombok:${project.lombok_version}")

    modImplementation("top.hendrixshen:magiclib-${project.minecraft_version.replace(".", "_")}:${project.magiclib_version}") {
        if (project.name == "snapshot") {
            exclude group: 'curse.maven', module: 'in-game-account-switcher-232676'
        }
    }
    runtimeOnly(project(path: ":fabricWrapper"))
}

loom {
    interfaceInjection {
        enableDependencyInterfaceInjection = true
    }

    runConfigs.configureEach {
        // Dump modified classes automatically.
        property("mixin.debug.export", "true")
    }

    // We need large window.
    runConfigs.client {
        programArgs([
                "--width",
                "1920",
                "--height",
                "1080",
        ])
        runDir("run/client")
    }

    // Useless, but we write here.
    runConfigs.server {
        runDir("run/server")
    }

    // Setup client default settings.
    runClient {
        defaultCharacterEncoding("UTF-8")
        if (!new File("${projectDir}/run/client/options.txt").exists()) {
            new File("${projectDir}/run/client").mkdirs()
            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("${projectDir}/run/client/options.txt"))
            bufferedWriter.writeLine("autoJump:false")
            bufferedWriter.writeLine("enableVsync:false")
            bufferedWriter.writeLine("forceUnicodeFont:true")
            bufferedWriter.writeLine("fov:1.0")
            bufferedWriter.writeLine("gamma:16.0")
            bufferedWriter.writeLine("guiScale:3")
            bufferedWriter.writeLine("lang:${Locale.getDefault().toString()}")
            bufferedWriter.writeLine("maxFps:260")
            bufferedWriter.writeLine("renderDistance:10")
            bufferedWriter.writeLine("soundCategory_master:0.0")
            bufferedWriter.close()
        }
    }

    // Useless, but we write here.
    // Setup server default settings.
    runServer {
        defaultCharacterEncoding("UTF-8")
        // Agree eula before server init.
        if (!new File("${projectDir}/run/server/eula.txt").exists()) {
            new File("${projectDir}/run/server").mkdirs()
            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("${projectDir}/run/server/eula.txt"))
            bufferedWriter.writeLine("eula=true")
            bufferedWriter.close()
        }
    }
}

remapJar {
    remapperIsolation = true
}

setSourceCompatibility(JavaVersion.VERSION_1_8)
setTargetCompatibility(JavaVersion.VERSION_1_8)
setArchivesBaseName("${project.archives_base_name}-${project.minecraft_version}")
setVersion(project.parent.version)
setGroup(project.maven_group)

processResources {
    inputs.property("version", version)
    filesMatching("fabric.mod.json") {
        expand(["mod_version"          : project.version,
                "mod_id"               : project.mod_id,
                "mod_name"             : project.mod_name,
                "mod_homepage"         : project.mod_homepage,
                "mod_sources"          : project.mod_sources,
                "mod_license"          : project.mod_license,
                "minecraft_dependency" : project.minecraft_dependency,
                "minecraft_version_id" : project.minecraft_version.replace(".", "_"),
                "minecraft_version"    : project.minecraft_version,
                "magiclib_dependency"  : project.magiclib_dependency
        ])
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("../../LICENSE")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "${project.mod_id}-${project.minecraft_version.replace(".", "_")}"
            version = project.version
            from(components.java)
        }
    }

    repositories {
        mavenLocal()
        maven {
            url("$rootDir/publish")
        }
    }
}
